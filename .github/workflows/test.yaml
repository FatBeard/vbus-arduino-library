# Based on https://github.com/arduino/arduino-cli-example/blob/master/.github/workflows/test.yaml
# Blog post explaining how this goes:
# https://blog.arduino.cc/2019/11/14/arduino-on-github-actions/

name: test-compilation
on: [push, pull_request]
jobs:
  # Job name
  test-matrix:
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type `arduino-platform`
        arduino-platform: ["arduino:avr"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following `include` section will be useless.
        include:
          # This works like this: when the platformn is "arduino:avr", the
          # variable `fqbn` is set to "arduino:avr:uno".
          - arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:uno"

    runs-on: ubuntu-latest
    steps:
      # First of all, we clone the repo using the `checkout` action.
      - name: Checkout
        uses: actions/checkout@master

      # We use the `arduino/setup-arduino-cli` action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.arduino-platform }}
          arduino-cli lib install AltSoftSerial

      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: cd src && arduino-cli compile --fqbn ${{ matrix.fqbn }} --dry-run
